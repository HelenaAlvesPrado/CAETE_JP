program flip_image

implicit none

!VARIABLES TO GET CMDLINE ARGS
character *100 BUFFER  !HOLDS ALL CMD ARGS AS A STRING
character *20  mode
character *100 file_in

integer,parameter :: nx = 196
integer,parameter :: ny = 92
integer,parameter :: strd = int(4*nx*ny)

real*4 :: input_data(nx,ny), out_data(nx,ny)


!GET THE PARAMETERS FROM THE COMMAND LINE ARGUMENT
    call GETARG(1,BUFFER)
    read(BUFFER,*) file_in
    call GETARG(2,BUFFER)
    read(BUFFER,*) mode

    if(mode.eq.'2d') then

       open(14,file=file_in,status='old', access='direct',recl=strd)
       read(14, rec=1) input_data
       close(14)

       call flip_image1(input_data, out_data, nx, ny)
       
       open(15,file=file_in,status='old',access='direct',recl=strd)
       write(15,rec=1) out_data
       close(15)
       
    else if(mode.eq.'3d') then
       
    else
       continue
       print*,* "NADA FEITO"


 contains

      subroutine flip_image1(input, output, a, b)

        
        integer :: i, j

        integer, intent(in) :: a,b
        real*4, intent(in), dimension (a,b) :: input
        real*4, intent(out), dimension (a,b) :: output
        do i = 1, a
          do j = b, 1, -1
             output(i, j) = input(i, (b + 1 - j))
          end do
        end do
      end subroutine flip_image1

      subroutine flip_image2(input, output, a, b, c)

        
        integer :: i, j, k

        integer, intent(in) :: a,b,c
        real*4, intent(in), dimension (a,b,c) :: input
        real*4, intent(out), dimension (a,b,c) :: output
        do k = 1, c
           do i = 1, a
              do j = b, 1, -1
                 output(i, j, k) = input(i, (b + 1 - j), k)
              end do
           end do
        enddo
      end subroutine flip_image2


      subroutine read12(nunit,var)
        ! auxiliar reading routine
        
        parameter(nx=192,ny=96)
        integer nunit
        real var(nx,ny,12)
        real aux(nx,ny)
        do k=1,12
           read(nunit,rec=k) aux
           do i=1,nx
              do j=1,ny
                 var(i,j,k) = aux(i,j)
              enddo
           enddo
        enddo
        return
      end subroutine read12
      
end program flip_image

